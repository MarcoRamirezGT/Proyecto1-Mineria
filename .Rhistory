datos<-db[complete.cases(db),]
datos<-data.frame(datos)
summary(datos)
#Muestra de 1000
datos<-head(datos,n=1000)
#Normalizado
datos[,6:7]<-scale(datos[,6:7])
set.seed(123)
hopkins(datos[,6:7])
#Matriz de distancia
datos_dist<- dist(datos[,6:7])
wss=0
for (i in 1:10)
wss[i] <- sum(kmeans(db[,6:7], centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
#Matriz de distancia
datos_dist<- dist(datos[,6:7])
fviz_dist(datos_dist, show_labels = F)
#Paquete NbClust
nb <- NbClust(datos[,6:7], distance = "euclidean", min.nc = 2,
max.nc = 10, method = "complete", index ="alllong")
#Muestra de aleatoria de 1000
datos<-sample(nrow(datos),size=1000,replace=FALSE)
View(datos)
nrow(datos)
#Muestra de aleatoria de 1000
datos<-datos [ sample ( nrow (datos), n = 1000 ),]
#Muestra de aleatoria de 1000
datos<-datos [ sample ( nrow (datos), size = 1000 ),]
muestramia<- sample(1:nrow(datos),size=n,replace=FALSE)
#Muestra de 1000
# datos<-head(datos,n=1000)
n<-30
muestramia<- sample(1:nrow(datos),size=n,replace=FALSE)
muestramia<- sample(1:nrow(datos),size=n,replace=FALSE)
muestramia<- sample(nrow(datos),size=n,replace=FALSE)
library(SamplingUtil)
library(SamplingUtil)
library(SamplingUtil)
muestramia<- sample(1:nrow(crime),size=n,replace=FALSE)
muestramia<- sample(1:nrow(datos),size=n,replace=FALSE)
muestramia<- sample(1:nrow(datos),size=n,replace=FALSE)
muestramia<- sample(nrow(datos),size=n,replace=FALSE)
library(SamplingUtil)
install.packages('SamplingUtil')
library(SamplingUtil)
install.packages('SamplingUtil')
install_github("DFJL/SamplingUtil")
install.packages("devtools")
library(devtools)
install_github("DFJL/SamplingUtil")
library(SamplingUtil)
muestrasis<- sys.sample(N=nrow(datos),n=30)
muestrasis<- sys.sample(N=nrow(datos),n=30)
#Muestra de 1000
# datos<-head(datos,n=1000)
View(datos)
#Descripcion de los datos
#Experimento repetible
set.seed(123)
datos<-db[complete.cases(db),]
datos<-data.frame(datos)
summary(datos)
#Muestra de 1000
# datos<-head(datos,n=1000)
View(datos)
muestrasis<- sys.sample(N=nrow(datos),n=30)
muestrasis
View(muestrasis)
muestrasis<- datos[sample(nrow(datos), 3), ]
View(muestrasis)
n=1000
datos<- datos[sample(nrow(datos), n), ]
View(datos)
View(datos)
source("D:/Users/MAQUITO/Desktop/UVG/UVG S7/Mineria de datos/Proyecto1/Proyecto1-Mineria/Clustering.R", encoding = 'UTF-8', echo=TRUE)
View(datos)
nrow(datos)
#Normalizado
datos[,6:7]<-scale(datos[,6:7])
set.seed(123)
hopkins(datos[,6:7])
#Matriz de distancia
datos_dist<- dist(datos[,6:7])
wss=0
for (i in 1:10)
wss[i] <- sum(kmeans(db[,6:7], centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
#Elbow
fviz_nbclust(datos[,6:7], kmeans, method = "wss") +  labs(subtitle = "Elbow method")
#Silhoutte
fviz_nbclust(datos[,6:7], kmeans, method = "silhouette") +  labs(subtitle = "Elbow method")
#Elbow
fviz_nbclust(datos[,6:7], kmeans, method = "wss") +  labs(subtitle = "Elbow method")
#Silhoutte
fviz_nbclust(datos[,6:7], kmeans, method = "silhouette") +  labs(subtitle = "silhouette method")
#Paquete NbClust
nb <- NbClust(datos[,6:7], distance = "euclidean", min.nc = 2,max.nc = 10, method = "complete", index ="all")
km<-kmeans(datos[,6:7],3,iter.max =100)
datos$grupo<-km$cluster
plotcluster(datos[,6:7],km$cluster)
km
fviz_cluster(km, data = datos[,6:7],geom = "point", ellipse.type = "norm")
fviz_cluster(km, data = datos,geom = "point", ellipse.type = "norm")
fviz_cluster(km, data = datos[,6:7],geom = "point", ellipse.type = "norm")
#Metodo de silueta
silkm<-silhouette(km$cluster,dist(datos[,6:7]))
mean(silkm[,3])
km$size
#Descripcion de los datos
#Experimento repetible
set.seed(123)
datos<-db[complete.cases(db),]
datos<-data.frame(datos)
summary(datos)
datos<- datos[sample(nrow(datos), 1000), ]
#Normalizado
datos[,6:7]<-scale(datos[,6:7])
set.seed(123)
hopkins(datos[,6:7])
#Matriz de distancia
datos_dist<- dist(datos[,6:7])
wss=0
for (i in 1:10)
wss[i] <- sum(kmeans(db[,6:7], centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
#Elbow
fviz_nbclust(datos[,6:7], kmeans, method = "wss") +  labs(subtitle = "Elbow method")
#Silhoutte
fviz_nbclust(datos[,6:7], kmeans, method = "silhouette") +  labs(subtitle = "silhouette method")
#Paquete NbClust
nb <- NbClust(datos[,6:7], distance = "euclidean", min.nc = 2,max.nc = 10, method = "complete", index ="all")
km<-kmeans(datos[,6:7],3,iter.max =100)
datos$grupo<-km$cluster
plotcluster(datos[,6:7],km$cluster)
fviz_cluster(km, data = datos[,6:7],geom = "point", ellipse.type = "norm")
#Metodo de silueta
silkm<-silhouette(km$cluster,dist(datos[,6:7]))
mean(silkm[,3])
km<-kmeans(datos[,6:7],2,iter.max =100)
datos$grupo<-km$cluster
plotcluster(datos[,6:7],km$cluster)
fviz_cluster(km, data = datos[,6:7],geom = "point", ellipse.type = "norm")
#Metodo de silueta
silkm<-silhouette(km$cluster,dist(datos[,6:7]))
mean(silkm[,2])
km<-kmeans(datos[,6:7],3,iter.max =100)
datos$grupo<-km$cluster
plotcluster(datos[,6:7],km$cluster)
fviz_cluster(km, data = datos[,6:7],geom = "point", ellipse.type = "norm")
#Metodo de silueta
silkm<-silhouette(km$cluster,dist(datos[,6:7]))
k2<- kmeans(datos[,6:7],centers=3,nstart = 25)
str(k2)
fviz_cluster(k2,data=datos)
fviz_cluster(k2,data=datos[,6:7])
balanced_clustering <- function(x, K, method = "centroid") {
input_validation_anticlustering(x, K, "distance", method, TRUE, NULL, NULL)
data <- to_matrix(x)
if (method == "ilp") {
return(balanced_cluster_editing(data, K))
}
nn_centroid_clustering(data, NROW(data) / K)
}
balanced_clustering(datos[6:7],3,method = 'centroid')
library(anticlust)
install.packages("anticlust")
library(anticlust)
balanced_clustering(datos[6:7],3,method = 'centroid')
#Descripcion de los datos
#Experimento repetible
set.seed(123)
datos<-db[complete.cases(db),]
datos<-data.frame(datos)
summary(datos)
datos<- datos[sample(nrow(datos), 1000), ]
#Normalizado
datos[,6:7]<-scale(datos[,6:7])
set.seed(123)
hopkins(datos[,6:7])
#Matriz de distancia
datos_dist<- dist(datos[,6:7])
wss=0
for (i in 1:10)
wss[i] <- sum(kmeans(db[,6:7], centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
#Elbow
fviz_nbclust(datos[,6:7], kmeans, method = "wss") +  labs(subtitle = "Elbow method")
#Silhoutte
fviz_nbclust(datos[,6:7], kmeans, method = "silhouette") +  labs(subtitle = "silhouette method")
#Paquete NbClust
nb <- NbClust(datos[,6:7], distance = "euclidean", min.nc = 2,max.nc = 10, method = "complete", index ="all")
km<-kmeans(datos[,6:7],3,iter.max =100)
km<-kmeans(datos[,6:7],3,iter.max =1000)
datos$grupo<-km$cluster
plotcluster(datos[,6:7],km$cluster)
km<-kmeans(datos[,6:7],3,iter.max =10)
datos$grupo<-km$cluster
plotcluster(datos[,6:7],km$cluster)
km<-kmeans(datos[,6:7],3)
datos$grupo<-km$cluster
plotcluster(datos[,6:7],km$cluster)
fviz_cluster(km, data = datos[,6:7],geom = "point", ellipse.type = "norm")
#Metodo de silueta
silkm<-silhouette(km$cluster,dist(datos[,6:7]))
mean(silkm[,3])
k2<- kmeans(datos[,6:7],centers=3,nstart = 25)
fviz_cluster(k2,data=datos[,6:7])
fviz_cluster(km,
datos[,6:7],
labelsize = 6,
choose.vars = c("Sepal.Width","Sepal.Length"),
main="k=3 grupos")
fviz_cluster(km,
datos[,6:7],
labelsize = 6,
choose.vars = c("Sepal.Width","Sepal.Length"),
main="k=3 grupos")
fviz_cluster(k2,data=datos[,6:7],labelsize = 6)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
db <- readRDS("db10_20.rds")
#Metodo de silueta
silkm<-silhouette(km$cluster,dist(datos[,6:7]))
mean(silkm[,3])
plot(silkm, cex.names=.4, col=1:3)
hombres_ext<-subset(db, select=c('Nacionalidad del hombre'),db$`Nacionalidad del hombre`!=320)
library(tidyverse)
db <- readRDS("db10_20.rds")
hombres_ext<-subset(db, select=c('Nacionalidad del hombre'),db$`Nacionalidad del hombre`!=320)
hombres<-nrow(hombres_ext)
hombres
mujeres_ext<-subset(db, select=c('Nacionalidad de la mujer'),db$`Nacionalidad de la mujer`!=320)
mujeres<-nrow(mujeres_ext)
mujeres
hombres_ext<-subset(db, select=c('Nacionalidad del hombre'),db$`Nacionalidad del hombre`!=320)
hombres1<-nrow(hombres_ext)
mujeres_ext<-subset(db, select=c('Nacionalidad de la mujer'),db$`Nacionalidad de la mujer`!=320)
mujeres1<-nrow(mujeres_ext)
extran<-c(hombres1, mujeres1)
extranjerosgtT<-(hombres1 + mujeres1)
extraT<-c(extranjerosgtT)
df<-data.frame(extran, extraT)
View(df)
df$extran<-as.factor(df$extran)
pregunta1Ed<-ggplot(data=df, aes(x=reorder(extraT,extran), y=extran, fill=extraT)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=extran), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Cantidad de extranjeros registrados en Guatemala ", x="Total de Extranjeros", y="Datos Hombres y Mujeres")+theme(legend.position="none")
# Maximo de bodas registradas en un dia
dep<-db[,'Dia de ocurrencia']
depocu<-subset(dep, select=c('Dia de ocurrencia'),db$`Dia de ocurrencia` != 0)
dep1<-data.frame(depocu)
nde<-aggregate(dep1$dep, dep1, length)
View(nde)
D<-c(nde$depocu)
C<-c(nde$x)
df<-data.frame(D,C)
df$D<-as.factor(df$D)
ask1<-df[order(-df$C),]
ask1f<-head(ask1,n=5)
pregunta2ED<-ggplot(data=ask1f, aes(x=reorder(D,-C), y=C, fill=D)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=C), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Maximo de bodas registradas en un dia ", x="Dia", y="Cantidad de bodas")+theme(legend.position="none")
edadParejaAlMenosUnMenor
source("D:/Users/MAQUITO/Desktop/UVG/UVG S7/Mineria de datos/Proyecto1/Proyecto1-Mineria/ScriptExploratorioM.R", encoding = 'UTF-8', echo=TRUE)
View(edadParejaAlMenosUnMenor)
edadParejaAlMenosUnMenor
edadParejaAlMenosUnMenor$`Edad del hombre`-edadParejaAlMenosUnMenor$`Edad de la mujer`
edadParejaAlMenosUnMenor$diff<-edadParejaAlMenosUnMenor$`Edad del hombre`-edadParejaAlMenosUnMenor$`Edad de la mujer`
View(edadParejaAlMenosUnMenor)
edadParejaAlMenosUnMenor$diff<-abs( edadParejaAlMenosUnMenor$`Edad del hombre`-edadParejaAlMenosUnMenor$`Edad de la mujer`)
View(edadParejaAlMenosUnMenor)
View(edadParejaAlMenosUnMenor)
ano10<-db[db$`Año de registro` == 2010, ]
anof10<-mean(replace(ano10$`Clase de union`, ano10$`Clase de union`==999, NA), na.rm = TRUE)
anof10<-round(anof10, digits = 0)
#2011
ano11<-db[db$`Año de registro` == 2011, ]
anof11<-mean(replace(ano11$`Clase de union`, ano11$`Clase de union`==999, NA), na.rm = TRUE)
anof11<-round(anof11, digits = 0)
#2012
ano12<-db[db$`Año de registro` == 2012, ]
anof12<-mean(replace(ano12$`Clase de union`, ano12$`Clase de union`==999, NA), na.rm = TRUE)
anof12<-round(anof12, digits = 0)
#2013
ano13<-db[db$`Año de registro` == 2013, ]
anof13<-mean(replace(ano13$`Clase de union`, ano13$`Clase de union`==999, NA), na.rm = TRUE)
anof13<-round(anof13, digits = 0)
#2014
ano14<-db[db$`Año de registro` == 2014, ]
anof14<-mean(replace(ano14$`Clase de union`, ano14$`Clase de union`==999, NA), na.rm = TRUE)
anof14<-round(anof14, digits = 0)
#2015
ano15<-db[db$`Año de registro` == 2015, ]
anof15<-mean(replace(ano15$`Clase de union`, ano15$`Clase de union`==999, NA), na.rm = TRUE)
anof15<-round(anof15, digits = 0)
#2016
ano16<-db[db$`Año de registro` == 2016, ]
anof16<-mean(replace(ano16$`Clase de union`, ano16$`Clase de union`==999, NA), na.rm = TRUE)
anof16<-round(anof16, digits = 0)
#2017
ano17<-db[db$`Año de registro` == 2017, ]
anof17<-mean(replace(ano17$`Clase de union`, ano17$`Clase de union`==999, NA), na.rm = TRUE)
anof17<-round(anof17, digits = 0)
#2018
ano18<-db[db$`Año de registro` == 2018, ]
anof18<-mean(replace(ano18$`Clase de union`, ano18$`Clase de union`==999, NA), na.rm = TRUE)
anof18<-round(anof18, digits = 0)
#2019
ano19<-db[db$`Año de registro` == 2019, ]
anof19<-mean(replace(ano19$`Clase de union`, ano19$`Clase de union`==999, NA), na.rm = TRUE)
anof19<-round(anof19, digits = 0)
#2020
ano20<-db[db$`Año de registro` == 2020, ]
anof20<-mean(replace(ano20$`Clase de union`, ano20$`Clase de union`==999, NA), na.rm = TRUE)
anof20<-round(anof20, digits = 0)
UnionPromedio<-c(anof10,anof11,anof12,anof13,anof14,anof15,anof16,anof17,anof18,anof19,anof20)
Año<-c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020)
df2<-data.frame(UnionPromedio,Año)
df2$Año<-as.factor(df2$Año)
pregunta3<-ggplot(data=df2, aes(x=Año, y=UnionPromedio, fill=UnionPromedio)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=UnionPromedio), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)
View(df2)
View(ano10)
View(db)
#Conteo
length(which(db$`Clase de union` ==3))
length(which(db$`Clase de union` ==3))
length(which(db$`Clase de union` ==2))
length(which(db$`Clase de union` ==1))
length(which(db$`Clase de union` ==9))
#Conteo
length(which(db$`Clase de union` ==3,db$`Año de registro`==2010))
#Conteo
length(which(db$`Clase de union` ==3,db$`Año de registro`==2010))
725142-725142
#Conteo
length(which(db$`Clase de union` ==3,db$`Año de registro`==2010))
#Conteo
length(which(db$`Clase de union` ==3&db$`Año de registro`==2010))
#Conteo
length(which(db$`Clase de union` ==3&&db$`Año de registro`==2010))
#Conteo
length(which(db$`Clase de union` ==3&db$`Año de registro`==2010))
#Conteo
length(which(db$`Clase de union` ==3&db$`Año de registro`==2010))
View(edadParejaAlMenosUnMenor)
diffMayor<-edadParejaAlMenosUnMenor[order(diff)]
edadParejaAlMenosUnMenor$diff<-abs( edadParejaAlMenosUnMenor$`Edad del hombre`-edadParejaAlMenosUnMenor$`Edad de la mujer`)
View(edadParejaAlMenosUnMenor)
diffMayor<-edadParejaAlMenosUnMenor[order(diff)]
str(edadParejaAlMenosUnMenor)
diffMayor<-edadParejaAlMenosUnMenor[order(edadParejaAlMenosUnMenor$diff)]
diffMayor<-edadParejaAlMenosUnMenor[order(edadParejaAlMenosUnMenor)]
diffMayor<-edadParejaAlMenosUnMenor[order(diff)]
diffMayor<-edadParejaAlMenosUnMenor[order(edadParejaAlMenosUnMenor$diff)]
edadParejaAlMenosUnMenor<-data.frame(edadParejaAlMenosUnMenor)
diffMayor<-edadParejaAlMenosUnMenor[order(edadParejaAlMenosUnMenor$diff)]
diffMayor<-edadParejaAlMenosUnMenor[order(edadParejaAlMenosUnMenor$diff)]
edadParejaAlMenosUnMenor
View(edadParejaAlMenosUnMenor)
edadParejaAlMenosUnMenor$diff<-abs( edadParejaAlMenosUnMenor$`Edad del hombre`-edadParejaAlMenosUnMenor$`Edad de la mujer`)
diffMayor<-edadParejaAlMenosUnMenor[order(edadParejaAlMenosUnMenor$diff)]
edadParejaAlMenosUnMenor[order(edadParejaAlMenosUnMenor$diff)]
diffMayor<-data.frame(edadParejaAlMenosUnMenor$diff)
View(diffMayor)
diffMayor<-data.frame(c(edadParejaAlMenosUnMenor$diff))
View(diffMayor)
colnames(diffMayor)[1]<-Diferencia
colnames(diffMayor)[1]<-'Diferencia'
View(diffMayor)
diffMayor<-order(diffMayor)
diffMayor[order(diffMayor)]
View(diffMayor)
ordeDif<-diffMayor[order(diffMayor)]
View(ordeDif)
ordeDif<-data.frame(ordeDif)
View(ordeDif)
edadParejaAlMenosUnMenor$diff<-abs( edadParejaAlMenosUnMenor$`Edad del hombre`-edadParejaAlMenosUnMenor$`Edad de la mujer`)
diffMayor<-data.frame(c(edadParejaAlMenosUnMenor$diff))
colnames(diffMayor)[1]<-'Diferencia'
edadParejaAlMenosUnMenor$diff<-abs( edadParejaAlMenosUnMenor$`Edad del hombre`-edadParejaAlMenosUnMenor$`Edad de la mujer`)
source("D:/Users/MAQUITO/Desktop/UVG/UVG S7/Mineria de datos/Proyecto1/Proyecto1-Mineria/ScriptExploratorioM.R", encoding = 'UTF-8', echo=TRUE)
order(diffMayor)
order(diffMayor$Diferencia)
diffMayor<-head(diffMayor,n=5)
View(diffMayor)
ggplot(data=diffMayor, aes(x=Diferencia, y='',fill=Diferencia)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=Diferencia), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Escolaridad de las mujeres", y="Cantidad")+
theme(legend.position="none")
ggplot(data=diffMayor, aes(x='', y=Diferencia,fill=Diferencia)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=Diferencia), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Escolaridad de las mujeres", y="Cantidad")+
theme(legend.position="none")
ggplot(data=diffMayor, aes(x=Diferencia, y=Diferencia,fill=Diferencia)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=Diferencia), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Escolaridad de las mujeres", y="Cantidad")+
theme(legend.position="none")
View(diffMayor)
diffMayor[order(diffMayor)]
diffMayor[order(diffMayor$Diferencia)]
diffMayor<-head(order(diffMayor),n=5)
diffMayor<-head(diffMayor,n=5)
View(diffMayor)
ggplot(data=diffMayor, aes(x=Diferencia, y=Diferencia,fill=Diferencia)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=Diferencia), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Escolaridad de las mujeres", y="Cantidad")+
theme(legend.position="none")
edadParejaAlMenosUnMenor$diff<-abs( edadParejaAlMenosUnMenor$`Edad del hombre`-edadParejaAlMenosUnMenor$`Edad de la mujer`)
diffMayor<-data.frame(c(edadParejaAlMenosUnMenor$diff))
colnames(diffMayor)[1]<-'Diferencia'
View(diffMayor)
diffMayor<-head(diffMayor,n=5)
ggplot(data=diffMayor, aes(x=Diferencia, y=Diferencia,fill=Diferencia)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=Diferencia), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Escolaridad de las mujeres", y="Cantidad")+
theme(legend.position="none")
diffMayor %>% arrange(desc(Diferencia))
edadParejaAlMenosUnMenor$diff<-abs( edadParejaAlMenosUnMenor$`Edad del hombre`-edadParejaAlMenosUnMenor$`Edad de la mujer`)
diffMayor<-data.frame(c(edadParejaAlMenosUnMenor$diff))
colnames(diffMayor)[1]<-'Diferencia'
diffMayor %>% arrange(desc(Diferencia))
View(diffMayor)
diffMayor<-diffMayor %>% arrange(desc(Diferencia))
View(diffMayor)
diffMayor<-head(diffMayor,n=5)
ggplot(data=diffMayor, aes(x=Diferencia, y=Diferencia,fill=Diferencia)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=Diferencia), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Escolaridad de las mujeres", y="Cantidad")+
theme(legend.position="none")
diffEdades<-ggplot(data=diffMayor, aes(x=Diferencia, y=Diferencia,fill=Diferencia)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=Diferencia), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Diferencia de edades entre los matrimonios con un menor de edad", y="Diferencia de edades")+
theme(legend.position="none")
diffEdades<-ggplot(data=diffMayor, aes(x=Diferencia, y=Diferencia,fill=Diferencia)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=Diferencia), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Diferencia de edades entre los matrimonios con un menor de edad", y="Diferencia de edades")+
theme(legend.position="none")
diffEdades
diffEdades
edadParejaAlMenosUnMenor$diff<-abs( edadParejaAlMenosUnMenor$`Edad del hombre`-edadParejaAlMenosUnMenor$`Edad de la mujer`)
diffMayor<-data.frame(c(edadParejaAlMenosUnMenor$diff))
colnames(diffMayor)[1]<-'Diferencia'
diffMayor<-diffMayor %>% arrange(desc(Diferencia))
View(diffMayor)
edadParejaAlMenosUnMenor$diff<-abs( edadParejaAlMenosUnMenor$`Edad del hombre`-edadParejaAlMenosUnMenor$`Edad de la mujer`)
diffMayor<-data.frame(c(edadParejaAlMenosUnMenor$diff))
colnames(diffMayor)[1]<-'Diferencia'
diffMayor<-diffMayor %>% arrange(desc(Diferencia))
View(diffMayor)
diffMayorN<-head(diffMayor,n=5)
diffEdades<-ggplot(data=diffMayorN, aes(x=Diferencia, y=Diferencia,fill=Diferencia)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=Diferencia), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Diferencia de edades entre los matrimonios con un menor de edad", y="Diferencia de edades")+
theme(legend.position="none")
diffEdades
diffMayor
diffGroup<-diffMayor %>%
group_by(Diferencia) %>%
tally()
View(diffGroup)
View(diffGroup)
diffGroup<-head(diffGroup,n=7)
View(diffGroup)
diffEdadesG<-ggplot(data=diffGroup, aes(x=Diferencia, y=n,fill=Diferencia)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=n), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Cantidad de diferencia de edades", y="Diferencia de edades")+
theme(legend.position="none")
diffEdadesG
diffGroup$Diferencia<-as.factor(diffGroup$Diferencia)
diffEdadesG<-ggplot(data=diffGroup, aes(x=Diferencia, y=n,fill=Diferencia)) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(aes(label=n), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
labs(title="Cantidad de diferencia de edades", y="Diferencia de edades")+
theme(legend.position="none")
diffEdadesG
source("D:/Users/MAQUITO/Desktop/UVG/UVG S7/Mineria de datos/Proyecto1/Proyecto1-Mineria/ScriptExploratorioM.R", encoding = 'UTF-8', echo=TRUE)
table(db$`Municipio de ocurrencia`)
#table(db$`Municipio de ocurrencia`)
table(db$`Dia de ocurrencia`)
table(db$`Mes de ocurrencia`)
table(db$`Año de ocurrencia`)
library(tidyverse)
db <- readRDS("db10_20.rds")
